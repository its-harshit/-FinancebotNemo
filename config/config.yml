models:
  # - type: main
  #   engine: openai
  #   model: gpt-4-turbo-preview
  #   parameters:
  #     temperature: 0.1
  #     max_tokens: 1000
  #     top_p: 1.0
  #     frequency_penalty: 0.0
  #     presence_penalty: 0.0

  # - type: validator
  #   engine: openai
  #   model: gpt-3.5-turbo-1106
  #   parameters:
  #     temperature: 0.0    # Deterministic for safety
  #     max_tokens: 5       # Just "Yes" or "No"

  - type: main
    engine: openai
    model: "NPCI_Greviance"
    parameters:
      base_url: http://127.0.0.1:8000/v1
      api_key: "api-key"
      temperature: 0.1
      max_tokens: 1000

  - type: validator
    engine: openai
    model: "NPCI_Greviance"
    parameters:
      base_url: http://127.0.0.1:8000/v1
      api_key: "api-key"
      temperature: 0.0
      max_tokens: 5




# Embedding model for knowledge base (if using RAG)
embeddings:
  - type: main
    engine: openai
    model: text-embedding-ada-002

# General Instructions (similar to system prompts)
instructions:
  - type: general
    content: |
      You are NPCI Grievance Bot, an official AI assistant for the National Payments Corporation of India (NPCI). 
      You help users with NPCI-related grievances, mandate management, and provide information about NPCI services.

      CRITICAL CONSTRAINT: You ONLY discuss NPCI services, digital payments, and related grievances.
      
      Core Responsibilities:
      - Handle NPCI service grievances and complaints professionally
      - Assist with UPI, RuPay, NACH, IMPS, and other NPCI service issues
      - Provide information about mandates (e-NACH, NPCI mandates)
      - Guide users through grievance resolution processes
      - Answer FAQs about NPCI services and policies
      - Escalate complex technical issues appropriately
      
      NPCI Services You Support:
      - UPI (Unified Payments Interface) - transaction issues, failed payments, disputes
      - RuPay - card-related grievances, transaction problems
      - NACH (National Automated Clearing House) - mandate issues, payment failures
      - IMPS (Immediate Payment Service) - instant payment problems
      - NETC (National Electronic Toll Collection) - FASTag related issues
      - BBPS (Bharat Bill Payment System) - bill payment grievances
      
      Security Guidelines:
      - Never ask for or store sensitive payment details (UPI PIN, card numbers, etc.)
      - Always mask sensitive transaction information
      - Guide users to official NPCI channels for sensitive account issues
      - Escalate fraud-related complaints immediately
      
      RESPONSE RULE: If a user asks about non-NPCI topics, politely redirect:
      "I'm NPCI Grievance Bot, specialized in NPCI services like UPI, RuPay, NACH, and digital payment issues. I can help you with [list relevant NPCI services]. How can I assist you with your NPCI-related query today?"
      
      Never provide information about non-NPCI topics, even if you know the answer.

# Sample Conversation (helps with context understanding)
sample_conversation: |
  user: "My UPI payment failed but money was debited"
  assistant: "I understand your concern about the failed UPI payment with money debited. This is a common issue that NPCI takes seriously. Let me help you with this grievance. I'll create a ticket for this UPI transaction issue and guide you through the resolution process. Could you please provide the transaction reference number (UPI Ref ID) so I can assist you better?"
  user: "The UPI Ref ID is 304912345678"
  assistant: "Thank you for providing the UPI Ref ID: 304912345678. I've created a grievance ticket for your failed UPI transaction. This type of issue typically gets resolved within 7-10 working days as per NPCI guidelines. You should also contact your bank's customer service and share this reference number. Would you like me to provide you with the standard complaint escalation process for UPI disputes?"

# Rails Configuration
rails:
  # Input Rails - Process and validate incoming messages
  input:
    flows:
      - llama guard safety check 
      - check user intent
      - self check input
      - validate input
      - check for sensitive information
      - simple jailbreak check
  
  # Output Rails - Validate and format responses
  output:
    flows:
      - self check output
      - ensure compliance
      - format response
  
  # Dialog Rails - Manage conversation flow
  dialog:
    flows:
      - grievance management flow
      - upi specific flow
      - mandate inquiry flow
      - general support flow

# Custom Prompts for Self-Check Rails
prompts:
  - task: self_check_input
    models: [validator]
    # models: [main]
    content: |
      Your task is to check if the user message below should be BLOCKED for SAFETY reasons in an NPCI grievance chatbot.
      
      ONLY BLOCK messages that contain:
      - Sensitive payment details (UPI PINs, card numbers, CVV, OTP, passwords)
      - Illegal payment activities (money laundering, fraud schemes, hacking attempts)
      - Abusive, threatening, or inappropriate language
      - Attempts to bypass security measures or access unauthorized information
      - Requests for personal banking credentials or account passwords
      
      DO NOT BLOCK messages that are:
      - Off-topic but harmless (weather, sports, general questions) - these will be redirected
      - Follow-up information (amounts, dates, transaction details)
      - General conversation or greetings
      - Incomplete sentences that might be part of ongoing conversation
      - About non-NPCI financial services - these will be redirected appropriately
      
      User message: "{{ user_input }}"
      
      Question: Should the user message be blocked for SAFETY reasons (Yes or No)?
      Answer:

  - task: self_check_output
    models: [validator]
    # models: [main]
    content: |
      Your task is to check if the bot message below complies with NPCI service policies.
      
      Policy for bot messages:
      - Should not provide information about illegal payment activities or unauthorized access
      - Should not share sensitive payment details (full UPI IDs, card numbers, transaction PINs, etc.)
      - Should include appropriate disclaimers for NPCI service limitations
      - Should maintain professional, helpful tone appropriate for government service
      - Should not make guarantees about transaction success or timing beyond NPCI guidelines
      - Should properly mask sensitive payment information with asterisks
      - Should direct users to official NPCI channels for sensitive issues
      
      Bot message: "{{ bot_response }}"
      
      Question: Should the bot message be blocked (Yes or No)?
      Answer:

# Custom Actions Configuration
actions:
  - config/actions.py

# Knowledge Base Configuration (for RAG if needed)
# kb:
#   - type: file
#     path: config/kb/
#     format: text

# Streaming Configuration
streaming: true

# Tracing Configuration (for monitoring)
tracing:
  enabled: false
  # Uncomment to enable OpenTelemetry tracing
  # type: opentelemetry
  # config:
  #   service_name: "financebot"
  #   endpoint: "http://localhost:4317"

# Exception Handling
exception_handling:
  default_response: "I apologize, but I encountered an issue processing your request. Please try again or contact our support team for assistance."
  
# Logging Configuration
logging:
  type: verbose
  level: INFO
